#summary PLUTO - PL/SQL Unit Testing for Oracle
#labels Featured,Pluto,testing,oracle,testdrivendevelopment,plsql

= Introduction =

Unit testing your PL/SQL from inside Oracle doesn't have to be difficult or expensive.  There is no need to be tied into some third-party closed source tool and no reason to start from scratch writing your own framework.  PLUTO can help get you started on the road to unit testing bliss, or at least unit testing.

= Installing PLUTO =

Installation couldn't be much easier, just [http://code.google.com/p/pluto-test-framework/downloads/list download the latest version] of the PLUTO source to a machine that can connect to your database, unpack the source file, and run:

{{{
  $> sqlplus @install.sql
}}}

It is recommended that you run the command in a schema called PLUTO and that the PLUTO schema have 'create type' privileges.

If you have any issues with the install, please be sure to [http://code.google.com/p/pluto-test-framework/issues/list log them].  Be sure to mention the version of Oracle that you are running.  And better yet, if you figured out how to fix the issue, please send in the patch.

== What is installed? ==

PLUTO is intended to be a lightweight system for unit testing.  It doesn't create any tables or store a lot of data.  Instead, it creates a TYPE and a handful of objects.

|| pluto_proc_name_tab || A type equivalent to a varchar2(30) ||
|| pluto_output_obj || An object used for the default output from the testing framework.  This object can be extended to accommodate just about any desired output format. ||
|| pluto_output_tap_obj || An example of extending the default pluto_output_obj.  This custom output object writes results in TAP, the Test Anything Protocol used by the [http://www.perl.org Perl] testing system, Test::Harness. ||
|| pluto_util_obj || Utility methods for test assertions. ||
|| pluto_obj || The core package for the testing framework.  This object is the object that custom test classes extend in order to get the benefit of the PLUTO interpretation of xUnit ||



= Getting Started Unit Testing With PLUTO =

After installing PLUTO, you are ready to start writing unit tests.  You might be interested in some [http://pluto-test-framework.googlecode.com/svn/trunk/examples/ test examples].  The text below highlights what you'll see in some of that example code.

To get started using PLUTO, you just have to subclass the main PLUTO object, pluto_obj.  To do this in Oracle, you'll need to create a package specification.

{{{
  create or replace type testing_obj under pluto_obj(
  )
  instantiable not final;
}}}

Of course, this specification doesn't really accomplish much other than to create a child class of _pluto_obj_.  We won't realize how powerful that is until a little later in this tutorial.